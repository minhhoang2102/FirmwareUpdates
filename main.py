from machine import UART, Pin, SPI
import time
from AVR_CMD import Command, AVR_model, AVR_signature
from SIM7600E import *
from DataPackage import *
import DataProcess as DP

Blink_chase

Blinks
Blink_fast
Blink_chass
Blink_fast1 = '0C945C000C946E000C946E000C946E000C946E000C946E000C946E000C946E000C946E000C946E000C946E000C946E000C946E000C946E000C946E000C946E000C9412010C946E000C946E000C946E000C946E000C946E000C946E000C946E000C946E000C946E0000000000240027002A0000000000250028002B0004040404040404040202020202020303030303030102040810204080010204081020010204081020000000080002010000030407000000000000000011241FBECFEFD8E0DEBFCDBF21E0A0E0B1E001C01D92A930B207E1F70E945C010C94CB010C940000E1EBF0E02491EDE9F0E09491E9E8F0E0E491EE23C9F0222339F0233001F1A8F4213019F1223029F1F0E0EE0FFF1FEE58FF4FA591B4912FB7F894EC91811126C090959E239C932FBF08952730A9F02830C9F0243049F7209180002F7D03C0209180002F7720938000DFCF24B52F7724BDDBCF24B52F7DFBCF2091B0002F772093B000D2CF2091B0002F7DF9CF9E2BDACF3FB7F8948091050190910601A0910701B091080126B5A89B05C02F3F19F00196A11DB11D3FBFBA2FA92F982F8827BC01CD01620F711D811D911D42E0660F771F881F991F4A95D1F708958F929F92AF92BF92CF92DF92EF92FF920E94B8004B015C0184E6C82ED12CE12CF12C0E94B800681979098A099B09683E734081059105A8F321E0C21AD108E108F10888EE880E83E0981EA11CB11CC114D104E104F10429F7FF90EF90DF90CF90BF90AF909F908F9008951F920F920FB60F9211242F933F938F939F93AF93BF938091010190910201A0910301B09104013091000123E0230F2D3758F50196A11DB11D209300018093010190930201A0930301B09304018091050190910601A0910701B09108010196A11DB11D8093050190930601A0930701B0930801BF91AF919F918F913F912F910F900FBE0F901F90189526E8230F0296A11DB11DD2CF789484B5826084BD84B5816084BD85B5826085BD85B5816085BD80916E00816080936E00109281008091810082608093810080918100816080938100809180008160809380008091B10084608093B1008091B00081608093B00080917A00846080937A0080917A00826080937A0080917A00816080937A0080917A00806880937A001092C100EDE9F0E02491E9E8F0E08491882399F090E0880F991FFC01E859FF4FA591B491FC01EE58FF4F859194918FB7F894EC91E22BEC938FBFC0E0D0E081E00E9470000E94DD0080E00E9470000E94DD002097A1F30E940000F1CFF894FFCFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'

text_message = 'Hello World!'
# uart0 = UART(0, baudrate=115200, tx=Pin(0), rx=Pin(1)) # for module SIM7600E
uart1 = UART(1, baudrate=115200, tx=Pin(4), rx=Pin(5))  # for ATmega328P
resetPin = Pin(3, Pin.OUT)

def resetMCU():
	resetPin.value(0)
	time.sleep(0.05)
	resetPin.value(1)
	time.sleep(0.15)
	resetPin.value(0)
	time.sleep(0.05)
	resetPin.value(1)
	time.sleep(0.15)

def sendByte(lists):
    data = bytes(lists)
    uart1.write(data)
    print('Data sent')
    print(data)
    rxDataISP = bytes()
    rxDataISP = b''
    time.sleep(0.5)
    current_time = time.time()
    while uart1.any() > 0:
        rxDataISP += uart1.read(1)
    time.sleep(0.5)
    ret = list(rxDataISP)
    print('MCU Reply:')
    print(rxDataISP)
    return ret

def getSync():
	cmd = [0x30, 0x20]
	return sendByte(cmd)

def setProg():
    cmd = [0x42, 0x86, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x03, 0xff, 0xff, 0xff, 0xff, 0x00, 0x80, 0x04, 0x00, 0x00, 0x00, 0x80, 0x00, 0x20]
    return sendByte(cmd)

# set Device extend
def setProgEx():
    cmd = [0x45, 0x05, 0x04, 0xd7, 0xc2, 0x00, 0x20]
    return sendByte(cmd)

# Enter Program mode
def enterProgMode():
    cmd = [0x50, 0x20]
    return sendByte(cmd)

# Get signature
def getSignature():
    cmd = [0x75, 0x20]
    sign = sendByte(cmd)
    signature = sign[1:-1:1]
    for s in range(len(AVR_signature)):
        if AVR_signature[s] == signature:
            return 'model: {}'.format(AVR_model[s])
    return 'Unknown model (signature {}), please check again'.format(signature)

# Universal:
def universal():
    # head = [0x56, 0x30, 0x00, 0x00, 0x00, 0x20]
    head = [0x56]
    tail = [0x00, 0x20]
    cmd = [[0x30, 0x00, 0x00], [0x30, 0x00, 0x01], [0x30, 0x00, 0x02], [0xac, 0x80, 0x00]]
    log = []
    for i in cmd:
        cmd_config = head + i + tail
        ret = sendByte(cmd_config)
    return ret

# Leave Program mode
def exProgMode():
    cmd = [0x51, 0x20]
    return sendByte(cmd)


def IncreaseAddress(addr):
    addr[0] += 0x40
    if addr[0] >255:
        addr[0] = 0x00
        addr[1] += 0x01
    return addr

def loadAddress(addr):
    head = [0x55]
    tail = [0x20]
    load_addr = head + addr + tail
    return sendByte(load_addr)

def flashPage(data):
    head = [0x64, 0x00, 0x80,0x46]
    tail = [0x20]
    flash_page = head + data + tail
    return sendByte(flash_page)

# Read page on microchip
def readPage(count):
    read_addr = [0x00 ,0x00]
    cmd = [0x74, 0x00, 0x80, 0x46, 0x20]
    read_page =[]
    for i in range(count):
        loadAddress(read_addr)
        page_raw = sendByte(cmd)
        read_page.append(page_raw[1:-1:1])
        IncreaseAddress(read_addr)
    return read_page

def compare(page, block):
    log = []
    print('comparing')
    for i in range(len(page)):
        if page[i] != block[i]:
            log.append('Verification Error: page[{}] != block[{}] #####{} $$$ {}#####'.format(i,i,page[i],block[i]))
            for j in range(len(page[i])):
                if page[i][j] != block[i][j]:
                    log.append('First mismatch at byte {} :  {} != {} '.format(i*128+j, hex(page[i][j]), hex(block[i][j])))
                    break
            break
    print('End compare')
    return log

#=====================================================
def start_Prog():
	resetMCU()
	print('get Sync')
	print(getSync())
	print('Set Prog')
	print(setProg())
	print('Set ProgEx')
	print(setProgEx())
	# print('Chip is being erased')
	# print(universal())
	print('Set Prog')
	print(setProg())
	print('Set ProgEx')
	print(setProgEx())
	print('Enter Programming session')
	print(enterProgMode())
	print('Get MCU signature: ')
	print(getSignature())
	# print('Chip is being erased')
	# print(universal())

def end_Prog():
	print('Exit Programming mode')
	print(exProgMode())
	print('Hard reset MCU')
	resetMCU()

def AVR_ISP(hex_data):
	addr = [0x00, 0x00]
	add_count = len(hex_data)
	print('Enter Programming mode:')
	start_Prog()
	for i in range(len(hex_data)):
		print('Flash page at address: {}  {}'.format(hex(addr[0]),hex(addr[1])))
		print(loadAddress(addr))
		flashPage(hex_data[i])
		IncreaseAddress(addr)
	Page = readPage(add_count)
	print(compare(Page, hex_data))
	end_Prog()


#==============================[ main ]========================================
#=========================Get data=============
# StartFTP()
# LoginFTPServer('ftp.drivehq.com', '21', 'mh1911200', '98027435610', '0')
# ChangeDir('Firmware_Updates')
# downloadFromFTP(filename)
filename = 'Blinkfast.ino.hex'

#lay file tu bo nho F:/ cua 7600 luu vao mot bien
t=''
t = GetRxHexStr('F:/'+filename)
s=''
s = GetDataPackage(t)
print(s)
# print(GetDataPackage(s))

#==========================Flashing==================
resetPin.value(1)
time.sleep(5)
print('Enter')
pre_data = bytes()
pre_data = b''
data = DP.FormatData(s)
AVR_ISP(data)

# data = DP.FormatData(Blink_chase)
# AVR_ISP(data)
# time.sleep(2)

